@import "tailwindcss";

@layer utilities {
  .animate-scanline {
    animation: scanline 2s linear infinite;
  }

  .animate-flicker {
    animation: flicker 0.15s infinite;
  }

  .bg-gradient-radial {
    background-image: radial-gradient(
      circle at center,
      var(--tw-gradient-from) 0%,
      var(--tw-gradient-to) 100%
    );
  }
}

/* Matrix animation */
@keyframes matrixFade {
  0% {
    color: rgb(255, 255, 255);
    opacity: 1;
  }
  50% {
    color: rgb(0, 255, 0);
    opacity: 0.8;
  }
  100% {
    color: rgb(255, 255, 255);
    opacity: 0;
  }
}

@keyframes matrixAppear {
  0% {
    opacity: 0;
    transform: translateY(-20px);
  }
  100% {
    opacity: 1;
    transform: translateY(0);
  }
}

.matrix-overlay {
  position: fixed;
  top: 0;
  left: 0;
  width: 100vw;
  height: 100vh;
  background: rgba(0, 0, 0, 0.9);
  z-index: 100;
  overflow: hidden;
}

.matrix-character {
  font-size: 1.2rem;
  line-height: 1;
  animation: matrixFade 2s forwards;
  animation-delay: var(--delay);
  pointer-events: none;
  user-select: none;
}

.matrix-character.new {
  animation: matrixAppear 0.5s forwards, matrixFade 2s forwards;
}

/* CRT effect */
.crt::before {
  content: " ";
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: linear-gradient(rgba(18, 16, 16, 0) 50%, rgba(0, 0, 0, 0.25) 50%),
    linear-gradient(
      90deg,
      rgba(255, 0, 0, 0.06),
      rgba(0, 255, 0, 0.02),
      rgba(0, 0, 255, 0.06)
    );
  background-size: 100% 2px, 3px 100%;
  pointer-events: none;
  z-index: 100;
}

.crt::after {
  content: " ";
  position: fixed;
  top: 0;
  left: 0;
  bottom: 0;
  right: 0;
  background: rgba(18, 16, 16, 0.1);
  opacity: 0;
  z-index: 100;
  pointer-events: none;
  animation: flicker 0.15s infinite;
}

@keyframes scanline {
  from {
    transform: translateY(-100%);
  }
  to {
    transform: translateY(100%);
  }
}

@keyframes flicker {
  0% {
    opacity: 0.27861;
  }
  5% {
    opacity: 0.34769;
  }
  10% {
    opacity: 0.23604;
  }
  15% {
    opacity: 0.90626;
  }
  20% {
    opacity: 0.18128;
  }
  25% {
    opacity: 0.83891;
  }
  30% {
    opacity: 0.65583;
  }
  35% {
    opacity: 0.67807;
  }
  40% {
    opacity: 0.26559;
  }
  45% {
    opacity: 0.84693;
  }
  50% {
    opacity: 0.96019;
  }
  55% {
    opacity: 0.08594;
  }
  60% {
    opacity: 0.20313;
  }
  65% {
    opacity: 0.71988;
  }
  70% {
    opacity: 0.53455;
  }
  75% {
    opacity: 0.37288;
  }
  80% {
    opacity: 0.71428;
  }
  85% {
    opacity: 0.70419;
  }
  90% {
    opacity: 0.7003;
  }
  95% {
    opacity: 0.36108;
  }
  100% {
    opacity: 0.24387;
  }
}

:root {
  color-scheme: dark;
  font-synthesis: none;
  text-rendering: optimizeLegibility;
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
  background-color: #1a1a1a;
}

body {
  margin: 0;
  min-width: 320px;
  min-height: 100vh;
  font-family: "Fira Code", monospace;
}

/* Terminal text glow effect */
.terminal-text {
  text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);
  letter-spacing: 0.05em;
}

/* Block styles */
.block-base {
  background-color: rgba(0, 255, 0, 0.05);
  border: 1px solid rgba(0, 255, 0, 0.2);
}

.block-highlighted {
  background-color: rgba(0, 255, 0, 0.2);
  border: 1px solid rgba(0, 255, 0, 0.3);
}

.block-selected {
  background-color: rgb(0, 255, 0);
  border: 1px solid rgb(0, 255, 0);
  color: black;
  font-weight: 500;
}

.block-marked-for-move {
  border: 2px dashed rgba(0, 255, 0, 0.7);
  background-color: rgba(0, 255, 0, 0.15);
  box-shadow: 0 0 10px rgba(0, 255, 0, 0.5);
}

.ghost-drop-target {
  outline: 2px dashed rgba(255, 255, 0, 0.7); /* Żółta przerywana ramka dla celu */
  background-color: rgba(
    255,
    255,
    0,
    0.1
  ) !important; /* Użyj !important aby nadpisać inne tła */
}

.block-ghost-preview {
  position: absolute;
  inset: 0; /* Rozciągnij na cały kontener rodzica */
  margin: 4px; /* Mały margines, aby nie zakrywać całkowicie ramki celu */
  padding: 0.75rem; /* p-3 */
  border-radius: 0.375rem; /* rounded */
  border: 2px dashed rgba(255, 200, 0, 0.7);
  background-color: rgba(255, 200, 0, 0.2); /* Lekko pomarańczowo-żółty */
  display: flex;
  align-items: center;
  justify-content: center;
  pointer-events: none; /* Aby nie przechwytywał zdarzeń myszy */
  z-index: 10; /* Aby był nad normalną zawartością */
}

.block-ghost-preview .terminal-text {
  opacity: 0.7;
}

/* Column styles */
.column-active {
  position: relative;
  z-index: 2;
  border: 1px solid rgba(0, 255, 0, 0.5);
  background: linear-gradient(
    180deg,
    rgba(0, 255, 0, 0.05) 0%,
    rgba(0, 255, 0, 0.02) 100%
  );
  box-shadow: inset 0 0 20px rgba(0, 255, 0, 0.05);
}

.column-inactive {
  position: relative;
  z-index: 1;
  border: 1px solid rgba(255, 255, 255, 0.1);
}

/* Block description styles */
.block-description {
  background: linear-gradient(
    180deg,
    rgba(0, 0, 0, 0.4) 0%,
    rgba(0, 0, 0, 0.6) 100%
  );
  border-top: 1px solid rgba(0, 255, 0, 0.2);
  box-shadow: inset 0 10px 20px rgba(0, 0, 0, 0.3);
}

.block-description::before {
  content: "";
  position: absolute;
  top: 0;
  left: 0;
  right: 0;
  height: 1px;
  background: linear-gradient(
    90deg,
    transparent 0%,
    rgba(0, 255, 0, 0.2) 20%,
    rgba(0, 255, 0, 0.2) 80%,
    transparent 100%
  );
}

/* Custom styles for Markdown content within .prose in hints */
.prose {
  --tw-prose-body: #e5e5e5;
  --tw-prose-headings: #e5e5e5;
  --tw-prose-lead: #e0e0e0;
  --tw-prose-links: #87cefa;
  --tw-prose-bold: #ffffff;
  --tw-prose-counters: #e5e5e5;
  --tw-prose-bullets: #e5e5e5;
  --tw-prose-hr: rgba(229, 229, 229, 0.3);
  --tw-prose-quotes: #d0d0d0;
  --tw-prose-quote-borders: rgba(229, 229, 229, 0.2);
  --tw-prose-captions: rgba(200, 200, 200, 0.7);
  --tw-prose-code: #e5e5e5;
  --tw-prose-pre-code: #e5e5e5;
  --tw-prose-pre-bg: rgba(50, 50, 50, 0.3);
  --tw-prose-th-borders: rgba(150, 150, 150, 0.5);
  --tw-prose-td-borders: rgba(100, 100, 100, 0.5);

  &
    :where(p, li, h1, h2, h3, strong, em, a, blockquote, code):not(
      :where([class~=\"not-prose\"] *)
    ) {
    text-shadow: 0 0 5px rgba(0, 255, 0, 0.5);
    letter-spacing: 0.05em;
  }
}

/* Style dla H1 */
.prose :where(h1):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings, #e5e5e5);
  font-weight: 700;
  font-size: 1.25em;
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

.prose :where(h1):not(:where([class~="not-prose"] *))::before {
  content: "";
  display: block;
  width: 100%;
  height: 1px;
  background-color: var(--tw-prose-hr, rgba(229, 229, 229, 0.3));
  margin-bottom: 0.75em;
}

/* Style dla H3 */
.prose :where(h3):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-headings, #e5e5e5);
  font-weight: 600;
  margin-top: 1.25em;
  margin-bottom: 0.5em;
}

/* Pierwszy akapit */
.prose :where(p:first-of-type):not(:where([class~="not-prose"] *)) {
  color: #00dd00;
  margin-top: 0;
  margin-bottom: 0.75em;
}

/* Pozostałe akapity */
.prose :where(p):not(:where([class~="not-prose"] *)):not(:first-of-type) {
  color: var(--tw-prose-body, #e5e5e5);
  margin-top: 0.75em;
  margin-bottom: 0.75em;
}

/* Style dla list */
.prose :where(ul):not(:where([class~="not-prose"] *)),
.prose :where(ol):not(:where([class~="not-prose"] *)) {
  margin-top: 0.75em;
  margin-bottom: 0.75em;
  padding-left: 1.5em;
}

.prose :where(ul > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-bullets, #e5e5e5);
}

.prose :where(ol > li):not(:where([class~="not-prose"] *))::marker {
  color: var(--tw-prose-counters, #e5e5e5);
  font-weight: 600;
}

.prose :where(li):not(:where([class~="not-prose"] *)) {
  margin-top: 0.3em;
  margin-bottom: 0.3em;
  padding-left: 0.25em;
  color: var(--tw-prose-body, #e5e5e5);
}

.prose :where(strong):not(:where([class~="not-prose"] *)) {
  color: var(--tw-prose-bold, #ffffff);
  font-weight: 700;
}

.prose :where(em):not(:where([class~="not-prose"] *)) {
  color: #d0d0d0;
}

.prose :where(hr):not(:where([class~="not-prose"] *)) {
  border-color: var(--tw-prose-hr, rgba(229, 229, 229, 0.3));
  margin-top: 1.5em;
  margin-bottom: 1.5em;
}
